{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "adf-turma3-imersao"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/ds_fixo_xlsx_cor')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_file_system",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "Excel",
				"typeProperties": {
					"sheetName": "Plan1",
					"location": {
						"type": "FileServerLocation",
						"fileName": "plan_cor.xlsx"
					},
					"firstRowAsHeader": true
				},
				"schema": [
					{
						"name": "id",
						"type": "String"
					},
					{
						"name": "cor",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_azuresql')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_azure_sql",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "AzureSqlTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_dblocal')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_sql_local",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"schema_name": {
						"type": "string"
					},
					"table_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": {
						"value": "@dataset().schema_name",
						"type": "Expression"
					},
					"table": {
						"value": "@dataset().table_name",
						"type": "Expression"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_delimited_text')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_data_lake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"directory_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					},
					"separator_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().directory_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().separator_file",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_delimited_text_2')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_data_lake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					},
					"separator_file": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": {
						"value": "@dataset().separator_file",
						"type": "Expression"
					},
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_data_lake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"file_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().file_name",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/ds_generic_parquet_dataflow')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "ls_data_lake",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/EX_POWERQUERY')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "WranglingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"name": "ds_fixo_cliente",
							"script": "source(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tisolationLevel: 'READ_UNCOMMITTED',\n\tformat: 'table') ~> ds_fixo_cliente",
							"dataset": {
								"referenceName": "ds_fixo_cliente",
								"type": "DatasetReference"
							}
						}
					],
					"script": "section Section1;\r\nshared ds_fixo_cliente = let AdfDoc = Sql.Database(\"sql-turma3-imersao.database.windows.net\", \"sqldb-turma3-imersao\", [CreateNavigationProperties = false]), InputTable = AdfDoc{[Schema=\"SalesLT\",Item=\"Customer\"]}[Data] in InputTable;\r\nshared UserQuery = let Source = #\"ds_fixo_cliente\",\r\n  #\"Removed columns\" = Table.RemoveColumns(Source, {\"Title\", \"NameStyle\", \"MiddleName\", \"Suffix\", \"CompanyName\", \"SalesPerson\", \"Phone\", \"PasswordHash\", \"PasswordSalt\", \"rowguid\", \"ModifiedDate\"}),\r\n  #\"Added custom\" = Table.TransformColumnTypes(Table.AddColumn(#\"Removed columns\", \"NOMECOMPLETO\", each [FirstName] & \" \" & [LastName]), {{\"NOMECOMPLETO\", type text}}) in #\"Added custom\";\r\n",
					"documentLocale": "en-us"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_API')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "API_TO_DATALAKE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "JsonSource",
								"storeSettings": {
									"type": "HttpReadSettings",
									"requestMethod": "GET",
									"requestTimeout": ""
								},
								"formatSettings": {
									"type": "JsonReadSettings"
								}
							},
							"sink": {
								"type": "JsonSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "JsonWriteSettings"
								}
							},
							"enableStaging": false
						},
						"inputs": [
							{
								"referenceName": "json_movies",
								"type": "DatasetReference",
								"parameters": {
									"token_api": "UQBeoisT7QGEkNHPEpJ8CeGtWfoUm8Lh",
									"Relative_URL": "critics/all.json?"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "Json_saida_api",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "trusted",
									"file_name": "criticas_filmes.json"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_COPY_DATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "EXCEL_TO_LAKE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "ExcelSource",
								"storeSettings": {
									"type": "FileServerReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "insert",
								"sqlWriterUseTableLock": false,
								"tableOption": "autoCreate",
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_fixo_xlsx_cor",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "SalesLT",
									"table_name": "TB_PlanCor"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_fixo_xlsx_cor')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_COPY_DATA_2')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "SQL_TO_SQL",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "AzureSqlSink",
								"writeBehavior": "upsert",
								"upsertSettings": {
									"useTempDB": true,
									"keys": [
										"id"
									]
								},
								"sqlWriterUseTableLock": false,
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "SalesLT",
									"table_name": "TB_ADF_COPY_SOURCE"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "SalesLT",
									"table_name": "TB_ADF_COPY_TARGET"
								}
							}
						]
					},
					{
						"name": "COPY_SQL_TO_DATALAKE",
						"type": "Copy",
						"dependsOn": [
							{
								"activity": "SQL_TO_SQL",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "SELECT * FROM [SalesLT].[TB_ADF_COPY_TARGET]",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "*",
									"table_name": "*"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generic_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "raw",
									"file_name": "COPY_TARGET.CSV",
									"separator_file": ";"
								}
							}
						]
					},
					{
						"name": "SQLLOCAL_TO_DATALAKE",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"additionalColumns": [
									{
										"name": "DT_INSERT",
										"value": {
											"value": "@utcNow()",
											"type": "Expression"
										}
									}
								],
								"sqlReaderQuery": "SELECT [COD_LOCAL]\n      ,[NOME]\n      ,[CIDADE]\n      ,[BAIRRO]\n      ,[ESTADO]\n  FROM [BD_EVENTOS_IMERSAO].[IMERSAO].[LOCALIZACAO]\n  WHERE ESTADO = 'PE'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobFSWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "ds_generic_dblocal",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "*",
									"table_name": "*"
								}
							}
						],
						"outputs": [
							{
								"referenceName": "ds_generic_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "raw",
									"file_name": {
										"value": "@concat('localizacao_',utcnow(),'.csv')",
										"type": "Expression"
									},
									"separator_file": ";"
								}
							}
						]
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_azuresql')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text_2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_dblocal')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_GETMETADATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata File",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Metadata File2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generic_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "filesluiz",
									"directory_name": {
										"value": "@toLower('')",
										"type": "Expression"
									},
									"file_name": "moviesDB.csv",
									"separator_file": ","
								}
							},
							"fieldList": [
								"exists"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Metadata Folder",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Metadata File",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generic_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "filesluiz",
									"directory_name": {
										"value": "@toLower('')",
										"type": "Expression"
									},
									"file_name": {
										"value": "@toLower('')",
										"type": "Expression"
									},
									"separator_file": {
										"value": "@toLower('')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Get Metadata Table",
						"type": "GetMetadata",
						"dependsOn": [
							{
								"activity": "Get Metadata Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "SalesLT",
									"table_name": "TB_PlanCor"
								}
							},
							"fieldList": [
								"structure"
							]
						}
					},
					{
						"name": "Get Metadata File2",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generic_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "filesluiz",
									"file_name": "cidades.csv",
									"separator_file": ";"
								}
							},
							"fieldList": [
								"itemName"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_azuresql')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_GETMETADATA_FOREACH_FILTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Get Metadata Folder",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "ds_generic_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "filesluiz",
									"directory_name": {
										"value": "@toLower('')",
										"type": "Expression"
									},
									"file_name": {
										"value": "@toLower('')",
										"type": "Expression"
									},
									"separator_file": {
										"value": "@toLower('')",
										"type": "Expression"
									}
								}
							},
							"fieldList": [
								"childItems"
							],
							"storeSettings": {
								"type": "AzureBlobFSReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "Filter txt",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Get Metadata Folder",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Get Metadata Folder').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@contains(item().name,'.txt' )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach parquet",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter txt",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter txt').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "txt_to_parquet",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_generic_delimited_text_2",
											"type": "DatasetReference",
											"parameters": {
												"container_name": "filesluiz",
												"file_name": {
													"value": "@item().name",
													"type": "Expression"
												},
												"separator_file": ";"
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_generic_parquet",
											"type": "DatasetReference",
											"parameters": {
												"container_name": "trusted",
												"file_name": {
													"value": "@replace(item().name,'.txt','.parquet')",
													"type": "Expression"
												}
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text_2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_LOOKUP')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Controller",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generic_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "filesluiz",
									"directory_name": "controller",
									"file_name": "controller_tables.csv",
									"separator_file": ";"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup CSV Singleton",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup Controller",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generic_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "filesluiz",
									"file_name": "cidades.csv",
									"separator_file": ";"
								}
							}
						}
					},
					{
						"name": "Lookup Table Singleton",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup CSV Singleton",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "SalesLT",
									"table_name": "TB_PlanCor"
								}
							}
						}
					},
					{
						"name": "Lookup CSV Array",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup Table Singleton",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generic_delimited_text_2",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "filesluiz",
									"file_name": "cidades.csv",
									"separator_file": ";"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup Table Array",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup CSV Array",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "SalesLT",
									"table_name": "TB_PlanCor"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Lookup Table Array Query",
						"type": "Lookup",
						"dependsOn": [
							{
								"activity": "Lookup Table Array",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"sqlReaderQuery": "\n/*Query para retornar todos as tabelas de um Schema*/\nSELECT TABLE_SCHEMA, TABLE_NAME\nFROM INFORMATION_SCHEMA.TABLES \n  WHERE TABLE_TYPE='BASE TABLE'\n  and TABLE_SCHEMA = 'SalesLT'",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference",
								"parameters": {
									"schema_name": "*",
									"table_name": "*"
								}
							},
							"firstRowOnly": false
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text_2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_azuresql')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/COPY_LOOKUP_FOREACH_FILTER')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Lookup Controller",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobFSReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "ds_generic_delimited_text",
								"type": "DatasetReference",
								"parameters": {
									"container_name": "filesluiz",
									"directory_name": "controller",
									"file_name": "controller_tables.csv",
									"separator_file": ";"
								}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "Filter Load 1",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Lookup Controller",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Lookup Controller').output.value",
								"type": "Expression"
							},
							"condition": {
								"value": "@equals(item().load_table,'1' )",
								"type": "Expression"
							}
						}
					},
					{
						"name": "ForEach1",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "Filter Load 1",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Filter Load 1').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "SQLLOCAL_to_LAKE",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "SqlServerSource",
											"queryTimeout": "02:00:00",
											"partitionOption": "None"
										},
										"sink": {
											"type": "DelimitedTextSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "DelimitedTextWriteSettings",
												"quoteAllText": true,
												"fileExtension": ".txt"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "ds_generic_dblocal",
											"type": "DatasetReference",
											"parameters": {
												"schema_name": {
													"value": "@item().schema_source",
													"type": "Expression"
												},
												"table_name": {
													"value": "@item().table_source",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "ds_generic_delimited_text_2",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@item().container_target",
													"type": "Expression"
												},
												"file_name": {
													"value": "@concat(item().file_target,'.csv')",
													"type": "Expression"
												},
												"separator_file": ";"
											}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_dblocal')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_POWERQUERY')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Power Query1",
						"type": "ExecuteWranglingDataflow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "EX_POWERQUERY",
								"type": "DataFlowReference",
								"datasetParameters": {
									"ds_fixo_cliente": {},
									"UserQuerydsgenericdelimitedtext2": {
										"container_name": "raw",
										"file_name": "powerquery.csv",
										"separator_file": ";"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"queries": [
								{
									"queryName": "UserQuery",
									"dataflowSinks": [
										{
											"name": "UserQuerydsgenericdelimitedtext2",
											"dataset": {
												"referenceName": "ds_generic_delimited_text_2",
												"type": "DatasetReference",
												"parameters": {
													"container_name": "raw",
													"file_name": "powerquery.csv",
													"separator_file": ";"
												}
											},
											"script": "sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tumask: 0022,\n\tpreCommands: [],\n\tpostCommands: [],\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> UserQuerydsgenericdelimitedtext2"
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/EX_POWERQUERY')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text_2')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/DATAFLOW_ARTISTA')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "ds_generic_delimited_text_2",
								"type": "DatasetReference"
							},
							"name": "artista"
						},
						{
							"dataset": {
								"referenceName": "ds_generic_delimited_text_2",
								"type": "DatasetReference"
							},
							"name": "eventoartista"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "ds_generic_azuresql",
								"type": "DatasetReference"
							},
							"name": "saidatablesql"
						},
						{
							"dataset": {
								"referenceName": "ds_generic_parquet_dataflow",
								"type": "DatasetReference"
							},
							"name": "saidaparquet"
						}
					],
					"transformations": [
						{
							"name": "renomearcolunas"
						},
						{
							"name": "renomearcolunasea"
						},
						{
							"name": "colunacalculada"
						},
						{
							"name": "joinartistaea"
						},
						{
							"name": "agrupamentoartista"
						},
						{
							"name": "condicao"
						}
					],
					"scriptLines": [
						"source(output(",
						"          COD_ARTISTA as short,",
						"          CPF as long,",
						"          NOME as string,",
						"          COD_ESTILO as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> artista",
						"source(output(",
						"          CODIGO as short,",
						"          VALOR_PGTO as double,",
						"          DT_PGTO as string,",
						"          FKCOD_ARTISTA as short,",
						"          FKCOD_EVENTO as short",
						"     ),",
						"     allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     inferDriftedColumnTypes: true,",
						"     ignoreNoFilesFound: false) ~> eventoartista",
						"artista select(mapColumn(",
						"          COD_ARTISTA,",
						"          NOME,",
						"          COD_ESTILO",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> renomearcolunas",
						"eventoartista select(mapColumn(",
						"          EA_CODIGO = CODIGO,",
						"          EA_VALOR_PGTO = VALOR_PGTO,",
						"          EA_DT_PGTO = DT_PGTO,",
						"          EA_FKCOD_ARTISTA = FKCOD_ARTISTA,",
						"          EA_FKCOD_EVENTO = FKCOD_EVENTO",
						"     ),",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true) ~> renomearcolunasea",
						"renomearcolunasea derive(valor_x_codigo = EA_CODIGO*EA_VALOR_PGTO) ~> colunacalculada",
						"renomearcolunas, colunacalculada join(COD_ARTISTA == EA_FKCOD_ARTISTA,",
						"     joinType:'left',",
						"     broadcast: 'auto')~> joinartistaea",
						"joinartistaea aggregate(groupBy(NOME),",
						"     faturamento_total = sum(EA_VALOR_PGTO)) ~> agrupamentoartista",
						"agrupamentoartista split(faturamento_total > 100000,",
						"     disjoint: false) ~> condicao@(saidatablesql, saidaparquet)",
						"condicao@saidatablesql sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     deletable:false,",
						"     insertable:true,",
						"     updateable:false,",
						"     upsertable:false,",
						"     format: 'table',",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     errorHandlingOption: 'stopOnFirstError') ~> saidatablesql",
						"condicao@saidaparquet sink(allowSchemaDrift: true,",
						"     validateSchema: false,",
						"     format: 'parquet',",
						"     partitionFileNames:['tb_faturamento_negativo.parquet'],",
						"     umask: 0022,",
						"     preCommands: [],",
						"     postCommands: [],",
						"     skipDuplicateMapInputs: true,",
						"     skipDuplicateMapOutputs: true,",
						"     partitionBy('hash', 1)) ~> saidaparquet"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/ds_generic_delimited_text_2')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_azuresql')]",
				"[concat(variables('factoryId'), '/datasets/ds_generic_parquet_dataflow')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ETL_DATAFLOW')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "exec_flow",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "1.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DATAFLOW_ARTISTA",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"artista": {
										"container_name": "bronze",
										"file_name": "artista.csv",
										"separator_file": ";"
									},
									"eventoartista": {
										"container_name": "bronze",
										"file_name": "evento_artista.csv",
										"separator_file": ";"
									},
									"saidatablesql": {
										"schema_name": "SalesLT",
										"table_name": "tb_faturamento_positivo"
									},
									"saidaparquet": {
										"container_name": "trusted"
									}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "None",
							"cacheSinks": {
								"firstRowOnly": true
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DATAFLOW_ARTISTA')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/ORQUESTADOR')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "COPY_GETMETADATA",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "COPY_GETMETADATA",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "COPY_LOOKUP",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "COPY_GETMETADATA",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "COPY_LOOKUP",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {},
					"cancelAfter": {}
				},
				"folder": {
					"name": "PIPELINES_ACTIVITIES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/COPY_GETMETADATA')]",
				"[concat(variables('factoryId'), '/pipelines/COPY_LOOKUP')]"
			]
		}
	]
}